CREATE DATABASE IF NOT EXISTS bank_management_system;

USE bank_management_system;

-- LOANS
CREATE TABLE LOANS (
    LOAN_ID INT AUTO_INCREMENT,
    ACCOUNT_NO BIGINT(16),
    LOAN_TYPE VARCHAR(20),
    AMOUNT DECIMAL(12, 2),
    INTEREST_RATE DECIMAL(5, 2),
    START_DATE DATE,
    END_DATE DATE,
    CONSTRAINT LOAN_PK PRIMARY KEY (LOAN_ID),
    CONSTRAINT LOAN_ACCOUNT_FK FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT_INFO (ACCOUNT_NO)
);

-- PAYMENTS
CREATE TABLE PAYMENTS (
    PAYMENT_ID INT AUTO_INCREMENT,
    LOAN_ID INT,
    PAYMENT_DATE DATE,
    AMOUNT DECIMAL(10, 2),
    CONSTRAINT PAYMENT_PK PRIMARY KEY (PAYMENT_ID),
    CONSTRAINT PAYMENT_LOAN_FK FOREIGN KEY (LOAN_ID) REFERENCES LOANS (LOAN_ID)
);

-- BILL_PAYMENTS
CREATE TABLE BILL_PAYMENTS (
    BILL_PAYMENT_ID INT AUTO_INCREMENT,
    ACCOUNT_NO BIGINT(16),
    BILLER_NAME VARCHAR(50),
    AMOUNT DECIMAL(10, 2),
    PAYMENT_DATE DATE,
    CONSTRAINT BILL_PAYMENT_PK PRIMARY KEY (BILL_PAYMENT_ID),
    CONSTRAINT BILL_PAYMENT_ACCOUNT_FK FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT_INFO (ACCOUNT_NO)
);

-- BENEFICIARIES
CREATE TABLE BENEFICIARIES (
    BENEFICIARY_ID INT AUTO_INCREMENT,
    ACCOUNT_NO BIGINT(16),
    BENEFICIARY_NAME VARCHAR(50),
    BENEFICIARY_ACCOUNT_NO BIGINT(16),
    CONSTRAINT BENEFICIARY_PK PRIMARY KEY (BENEFICIARY_ID),
    CONSTRAINT BENEFICIARY_ACCOUNT_FK FOREIGN KEY (ACCOUNT_NO) REFERENCES ACCOUNT_INFO (ACCOUNT_NO)
);

-- MESSAGES
CREATE TABLE MESSAGES (
    MESSAGE_ID INT AUTO_INCREMENT,
    SENDER_ID VARCHAR(5),
    RECEIVER_ID VARCHAR(5),
    MESSAGE_TEXT TEXT,
    SEND_DATE DATETIME,
    CONSTRAINT MESSAGE_PK PRIMARY KEY (MESSAGE_ID),
    CONSTRAINT MESSAGE_SENDER_FK FOREIGN KEY (SENDER_ID) REFERENCES CUSTOMER_PERSONAL_INFO (CUSTOMER_ID),
    CONSTRAINT MESSAGE_RECEIVER_FK FOREIGN KEY (RECEIVER_ID) REFERENCES CUSTOMER_PERSONAL_INFO (CUSTOMER_ID)
);
